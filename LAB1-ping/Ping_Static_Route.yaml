annotations:
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      192.168.10.10/24
      GW: 192.168.10.1
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -520.0
    y1: 160.0
    z_index: 1
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: |-
      192.168.20.10/24
      GW 192.168.20.1
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: 120.0
    y1: 160.0
    z_index: 2
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: vlan10
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: -400.0
    y1: -80.0
    z_index: 3
  - border_color: '#00000000'
    border_style: ''
    color: '#808080FF'
    rotation: 0
    text_bold: false
    text_content: vlan20
    text_font: monospace
    text_italic: false
    text_size: 12
    text_unit: pt
    thickness: 1
    type: text
    x1: 80.0
    y1: -80.0
    z_index: 4
smart_annotations: []
nodes:
  - boot_disk_size: null
    configuration:
      - name: node.cfg
        content: |-
          # this is a shell script which will be sourced at boot
          hostname VM1
          # configurable user account
          USERNAME=cisco
          PASSWORD=cisco

          ip address add 192.168.10.10/24 dev eth0
          ip link set eth0 up
          ip route add default via 192.168.10.1
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n0
    image_definition: null
    label: VM-0
    node_definition: desktop
    parameters: {}
    ram: null
    tags: []
    x: -280
    y: 160
    interfaces:
      - id: i0
        label: eth0
        mac_address: null
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration:
      - name: node.cfg
        content: |-
          # this is a shell script which will be sourced at boot
          hostname VM2
          # configurable user account
          USERNAME=cisco
          PASSWORD=cisco

          # add ip address on eth0
          ip address add 192.168.20.10/24 dev eth0
          ip link set eth0 up
          ip route add default via 192.168.20.1
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n1
    image_definition: null
    label: VM-1
    node_definition: desktop
    parameters: {}
    ram: null
    tags: []
    x: 40
    y: 160
    interfaces:
      - id: i0
        label: eth0
        mac_address: null
        slot: 0
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |
          hostname SWITCH1
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["nxos_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin



          ! Configuration for Switch 1
          ! configure terminal
          vlan 10
          name Vlan10
          ! exit

          interface Ethernet1/1
          switchport mode access
          switchport access vlan 10
          !exit

          ! configure VLAN interfaces
          feature interface-vlan
          ip routing

          interface Vlan10
          ip address 192.168.10.1/24
          no shutdown
          ! exit

          ! SW1 -- SW2
          interface Ethernet1/2
          no switchport
          ip address 10.10.10.1/30
          no shutdown

          ! Route

          ip route 192.168.20.0/24 10.10.10.2
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n2
    image_definition: null
    label: switch1
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: -280
    y: -80
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
  - boot_disk_size: null
    configuration:
      - name: nxos_config.txt
        content: |-
          hostname SWITCH2
          # workaround for booting to loader> prompt
          echo 'from cli import cli' > set_boot.py
          echo 'import json' >> set_boot.py
          echo 'import os' >> set_boot.py
          echo 'import time' >> set_boot.py
          echo 'bootimage = json.loads(cli("show version | json"))["nxos_file_name"]' >> set_boot.py
          echo 'set_boot = cli("conf t ; boot nxos {} ; no event manager applet BOOTCONFIG".format(bootimage))' >> set_boot.py
          echo 'i = 0' >> set_boot.py
          echo 'while i < 10:' >> set_boot.py
          echo '    try:' >> set_boot.py
          echo '        save_config = cli("copy running-config startup-config")' >> set_boot.py
          echo '        break' >> set_boot.py
          echo '    except Exception:' >> set_boot.py
          echo '        i += 1' >> set_boot.py
          echo '        time.sleep(1)' >> set_boot.py
          echo 'os.remove("/bootflash/set_boot.py")' >> set_boot.py
          event manager applet BOOTCONFIG
           event syslog pattern "Configured from vty"
           action 1.0 cli python bootflash:set_boot.py
          # minimum needed config to login
          no password strength-check
          username admin role network-admin
          username admin password cisco role network-admin
          username cisco role network-admin
          username cisco password cisco role network-admin


          ! Configuration for Switch 2
          ! configure terminal
          vlan 20
          name vlan20
          ! exit

          interface Ethernet1/1
          switchport mode access
          switchport access vlan 20
          ! exit

          feature interface-vlan
          ip routing

          interface vlan20
          ip address 192.168.20.1/24
          no shutdown
          ! exit

          ! SW1 -- SW2
          interface Ethernet1/2
          no switchport
          ip address 10.10.10.2/30
          no shutdown

          ! Route
          ip route 192.168.10.0/24 10.10.10.1
    cpu_limit: null
    cpus: null
    data_volume: null
    hide_links: false
    id: n3
    image_definition: null
    label: switch2
    node_definition: nxosv9000
    parameters: {}
    ram: null
    tags: []
    x: 40
    y: -80
    interfaces:
      - id: i0
        label: Loopback0
        mac_address: null
        type: loopback
      - id: i1
        label: mgmt0
        mac_address: null
        slot: 0
        type: physical
      - id: i2
        label: Ethernet1/1
        mac_address: null
        slot: 1
        type: physical
      - id: i3
        label: Ethernet1/2
        mac_address: null
        slot: 2
        type: physical
      - id: i4
        label: Ethernet1/3
        mac_address: null
        slot: 3
        type: physical
links:
  - id: l0
    n1: n0
    n2: n2
    i1: i0
    i2: i2
    conditioning: {}
    label: VM-0-eth0<->switch1-Ethernet1/1
  - id: l1
    n1: n1
    n2: n3
    i1: i0
    i2: i2
    conditioning: {}
    label: VM-1-eth0<->switch2-Ethernet1/1
  - id: l2
    n1: n2
    n2: n3
    i1: i3
    i2: i3
    conditioning: {}
    label: switch1-Ethernet1/2<->switch2-Ethernet1/2
lab:
  description: Ping from VM1 to VM2 through VLAN 10
  notes: ''
  title: himbisht Lab1
  version: 0.3.0
